# AutoBlogger Caddy Configuration
# Serves both frontend (Next.js) and backend (FastAPI) with automatic HTTPS

# Main application domain
{$DOMAIN:localhost} {
    # Enable automatic HTTPS for production
    # For local development, use 'caddy run --watch' with localhost

    # Frontend - Next.js application (default route)
    handle {
        reverse_proxy localhost:3000 {
            # WebSocket support for Next.js hot reload
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            #header_up X-Forwarded-For {remote_host}
            #header_up X-Forwarded-Proto {scheme}
        }
    }

    # Backend API - FastAPI application
    handle /api/* {
        reverse_proxy localhost:8000 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            #header_up X-Forwarded-For {remote_host}
            #header_up X-Forwarded-Proto {scheme}
        }
    }

    # Backend docs and health endpoints
    handle /docs* {
        reverse_proxy localhost:8000
    }
    
    handle /redoc* {
        reverse_proxy localhost:8000
    }
    
    handle /health* {
        reverse_proxy localhost:8000
    }

    # Static assets optimization
    handle /_next/static/* {
        reverse_proxy localhost:3000
        header Cache-Control "public, max-age=31536000, immutable"
    }

    # Enable compression
    encode gzip

    # Security headers
    header {
        # Enable HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        # Prevent MIME type sniffing
        X-Content-Type-Options "nosniff"
        # Enable XSS protection
        X-XSS-Protection "1; mode=block"
        # Prevent clickjacking
        X-Frame-Options "DENY"
        # Remove server header
        -Server
    }

    # Logging
    log {
        output file ./autoblogger.log {
            roll_size 10MB
            roll_keep 10
        }
        format json
        level INFO
    }
}

# Alternative configuration for subdomain setup
# Uncomment and modify if you prefer subdomain routing

# Frontend subdomain
# app.{$DOMAIN:localhost} {
#     reverse_proxy localhost:3000 {
#         header_up Host {upstream_hostport}
#         header_up X-Real-IP {remote_host}
#         header_up X-Forwarded-For {remote_host}
#         header_up X-Forwarded-Proto {scheme}
#     }
#     
#     encode gzip
#     
#     header {
#         Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
#         X-Content-Type-Options "nosniff"
#         X-XSS-Protection "1; mode=block"
#         X-Frame-Options "DENY"
#         -Server
#     }
# }

# API subdomain
# api.{$DOMAIN:localhost} {
#     reverse_proxy localhost:8000 {
#         header_up Host {upstream_hostport}
#         header_up X-Real-IP {remote_host}
#         header_up X-Forwarded-For {remote_host}
#         header_up X-Forwarded-Proto {scheme}
#     }
#     
#     encode gzip
#     
#     header {
#         Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
#         X-Content-Type-Options "nosniff"
#         X-XSS-Protection "1; mode=block"
#         X-Frame-Options "DENY"
#         -Server
#     }
# }
