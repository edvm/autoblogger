[project]
name = "autoblogger"
version = "0.1.0"
description = "Generate articles, blog posts, etc."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "bcrypt>=4.3.0",
    "clerk-backend-api>=3.0.3",
    "fastapi>=0.115.12",
    "google-genai>=0.8.5",
    "openai>=1.84.0",
    "pydantic[email]>=2.11.5",
    "pyjwt[crypto]>=2.10.1",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-mock>=3.14.1",
    "python-dotenv>=1.1.0",
    "redis>=6.2.0",
    "rich>=14.0.0",
    "slowapi>=0.1.9",
    "sqlalchemy>=2.0.41",
    "tavily-python>=0.7.5",
    "uvicorn>=0.34.3",
]

[dependency-groups]
dev = [
    "pytest>=8.4.0",
    "pytest-mock>=3.14.1",
    "pytest-cov>=6.0.0",
    "pytest-xdist>=3.0.0",
    "ruff>=0.11.13",
    "bandit>=1.7.10",
    "mypy>=1.0.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=30",
    "--junitxml=pytest-report.xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow running tests",
    "api: API tests",
    "llm: Tests that require LLM providers",
    "asyncio: Async tests",
    "auth: Authentication tests",
    "security: Security tests",
]
filterwarnings = [
    "ignore::pytest.PytestUnraisableExceptionWarning",
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "test_*.py",
    "*_test.py", 
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/node_modules/*",
    "*/site-packages/*",
    "*/__pycache__/*",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
target-version = "py313"
line-length = 88
extend-exclude = [
    "migrations",
    ".venv",
    "venv",
    "node_modules",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by formatter
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501", "F401", "F811"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "tavily.*",
    "clerk_backend_api.*",
    "google.genai.*",
]
ignore_missing_imports = true
